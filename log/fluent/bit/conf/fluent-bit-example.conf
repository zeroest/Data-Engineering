[SERVICE]
    # Flush
    # =====
    # set an interval of seconds before to flush records to a destination
    flush        1

    # Daemon
    # ======
    # instruct Fluent Bit to run in foreground or background mode.
    daemon       On

    # Log_Level
    # =========
    # Set the verbosity level of the service, values can be:
    #
    # - error
    # - warning
    # - info
    # - debug
    # - trace
    #
    # by default 'info' is set, that means it includes 'error' and 'warning'.
    log_level    info
    log_file     /path/to/log/fluent-bit.log

    # Parsers File
    # ============
    # specify an optional 'Parsers' configuration file
    parsers_file parsers_multiline.conf

    # Plugins File
    # ============
    # specify an optional 'Plugins' configuration file to load external plugins.
    # plugins_file plugins.conf ###

    # HTTP Server
    # ===========
    # Enable/Disable the built-in HTTP Server for metrics
    http_server  On
    http_listen  0.0.0.0
    http_port    2020
    hot_reload   On

    # Storage
    # =======
    # Fluent Bit can use memory and filesystem buffering based mechanisms
    #
    # - https://docs.fluentbit.io/manual/administration/buffering-and-storage
    #
    # storage metrics
    # ---------------
    # publish storage pipeline metrics in '/api/v1/storage'. The metrics are
    # exported only if the 'http_server' option is enabled.

    storage.metrics on

    # storage.path
    # ------------
    # absolute file system path to store filesystem data buffers (chunks).

    storage.path /path/to/flb-storage
    storage.max_chunks_up 128

    # storage.sync
    # ------------
    # configure the synchronization mode used to store the data into the
    # filesystem. It can take the values normal or full.
    #
    # storage.sync normal

    # storage.checksum
    # ----------------
    # enable the data integrity check when writing and reading data from the
    # filesystem. The storage layer uses the CRC32 algorithm.
    #
    # storage.checksum off

    # storage.backlog.mem_limit
    # -------------------------
    # if storage.path is set, Fluent Bit will look for data chunks that were
    # not delivered and are still in the storage layer, these are called
    # backlog data. This option configure a hint of maximum value of memory
    # to use when processing these records.
    #
    # storage.backlog.mem_limit 5M

    scheduler.cap 3
    scheduler.base 1

@SET service_name=hello_world

[INPUT]
    name cpu
    alias cpu.${HOSTNAME}

[INPUT]
    name mem
    alias mem.${HOSTNAME}

[INPUT]
    name tail
    tag  log.${service_name}
    path /path/to/${service_name}/log/*.log
    db /path/to/db/${service_name}.flb.db

    refresh_interval 1
    skip_empty_lines on
    skip_long_lines on
    read_from_head false

    buffer_chunk_size 100k
    buffer_max_size 10MB

    # mem_buf_limit 256MB
    storage.type filesystem

[FILTER]
    name record_modifier
    match *
    record hostname ${HOSTNAME}

[FILTER]
    name multiline
    match log.*
    multiline.key_content log
    multiline.parser multiline-regex, multiline-regex-other

[OUTPUT]
    name http
    match log.*
    host localhost
    port 8080
    uri /path/to/ingest
    format json_lines
    json_date_format iso8601
    header Content-Type application/json

    # storage.total_limit_size 512M
    retry_limit 3

    log_level    warning
